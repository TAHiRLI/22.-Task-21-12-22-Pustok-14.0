
@{
    ViewData["Title"] = "Index";
}


@{
    ViewData["Title"] = "Index";
    int order = 0;
}
@model List<AppUser>

<main>
    <div class="container-fluid px-4">

        <div class="card mb-4">
        </div>
        <div class="card mb-4">
            <div class="card-header row">
                <div class="col-md-6">
                    <i class="fas fa-table me-1"></i>
                    DataTable Example
                </div>
                <div class="col-md-6 text-end">
                    <a class="btn btn-success" asp-action="create" asp-controller="slider"><i class="fas fa-plus"></i></a>
                </div>

            </div>
            <div class="card-body">
                <table class="table table-striped table-light" id="datatablesSimple">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>Username</th>
                            <th>FullName</th>
                            <th>Email</th>
                        </tr>
                    </thead>

                    <tbody>

                        @foreach (var user in Model)
                        {
                            order++;

                            <tr id="user-@user.Id">
                                <td> @order</td>
                                <td>
                                    <span class="status-dot status-offline"></span>
                                    @user.UserName</td>
                                <td>@user.Fullname</td>
                                <td>@user.Email</td>
                            </tr>

                        }



                    </tbody>
                </table>
             
            </div>
        </div>
    </div>
</main>

@section Scripts{
    <script src="~/assets/js/signalr.min.js"></script>

    <script>

        let connection = new signalR.HubConnectionBuilder().withUrl("/myHub").build();

        connection.start().then(function () {
            console.log(connection)
            console.log(connection.connectionId)

        }).catch(function (err) {
            return console.error(err.toString());
        });


        connection.on("setAsOnline", function(userId){
            let element = document.querySelector(`#user-${userId} span.status-dot`)
            console.log(element)
            element.classList.add("status-online");
            element.classList.remove("status-offline");

                console.log( userId +  " Online");
        })
        connection.on("setAsOffline", function (userId) {
           let element = document.querySelector(`#user-${userId} span.status-dot`)
            
           
            console.log(userId + " offline");
            element.classList.remove("status-online");
            element.classList.add("status-offline");
        })
       

    </script>
}



